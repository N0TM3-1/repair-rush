local machines = {}

go.property("interaction_distance", 300)

local distances = {}

local function get_distance(other_url)
	local self_pos = go.get_position()
	local other_pos = go.get_position(other_url)
	return vmath.length(self_pos - other_pos)
end

local function get_smallest(self)
	local smallest = 999999 -- Larger than possible distances
	local smallest_index = ""
	for k, v in pairs(distances) do
		if v < smallest then
			smallest = v
			smallest_index = k
		end
	end
	if smallest <= self.interaction_distance then
		return smallest_index
	else
		return nil
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	sound.play("/sounds#bg")
end

function on_input(self, action_id, action)
	if action_id == hash("action_right") and action.pressed then
		print("ACTION RIGHT")
		for k, v in pairs(machines) do
			distances[v] = get_distance(v)
		end
		local url = get_smallest(self)
		if url then
			print("Released input focus")
			msg.post(url, "start_minigame")
			msg.post(".", "release_input_focus")
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("broken") then
		table.insert(machines, sender)
	elseif message_id == hash("fixed") then
		for k, v in pairs(machines) do
			if v == sender then -- Remove fixed machine from 'interactibles' table
				table.remove(machines, k)
				break
			end
		end
		for k, v in pairs(distances) do
			if k == sender then
				distances[k] = nil
				break
			end
		end
	elseif message_id == hash("minigame_ended") then
		msg.post(".", "acquire_input_focus")
	end
end
